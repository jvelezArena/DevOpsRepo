# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- first-branch

resources:
  repositories:
  - repository: DevOpsRepo
    type: github
    name: jvelezArena/DevOpsRepo
    ref: main
    endpoint: 'https://github.com/jvelezArena/DevOpsRepo'
    trigger:
    - first-branch
    - release/*

stages: 
- stage: Preparing_Env
  pool:
    vmImage: ubuntu-latest


  jobs:
  - job: install_maven
    steps:
      - task: Maven@4
        inputs:
          mavenPomFile: 'pom.xml'
          publishJUnitResults: false
          javaHomeOption: 'JDKVersion'
          mavenVersionOption: 'Default'
          mavenAuthenticateFeed: false
          effectivePomSkip: false
          sonarQubeRunAnalysis: false
          sqMavenPluginVersionChoice: 'latest'

  - job: maven_command
    steps:
      - script: sudo apt-get install maven
        displayName: 'Starting maven'
  
  - job: maven_test
    steps:
      - script: mvn test
        displayName: 'Maven Test'

#  - job: install_sonarQube
#    steps:
#      - script: sudo apt-get install sonar
#        displayName: 'Installing Sonar'

#  - job: start_sonarQube
#    steps:
#      - script: sudo apt-get start sonarqube
#        displayName: 'Starting Sonar'

  - job: sonarQube_analysis
    steps:
    - task: SonarQubePrepare@5
      inputs:
        SonarQube: 'AzureDevopsPipeline'
        scannerMode: 'MSBuild'
        projectKey: 'CalculatorDevOps'
        projectName: 'Proyecto Dependencia Maven'
    
    